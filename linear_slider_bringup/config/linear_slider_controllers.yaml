controller_manager:
  ros__parameters:
    update_rate: 101 # hz

    joint_trajectory_controller:
      type: joint_trajectory_controller/JointTrajectoryController
      # TODO: Therefore if the hardware provides only acceleration or velocity states they have to be integrated in the hardware-interface implementation of velocity and position to use these controllers.

    # velocity_controller:
    #   type: velocity_controllers/JointGroupVelocityController

    

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster


# velocity_controller:
#   ros__parameters:
#     joints:
#       - joint1
#     interface_name: velocity
    
joint_trajectory_controller:
  ros__parameters:
    joints:
      - joint1

    command_interfaces:
      # - position
      - velocity

    state_interfaces:
      - position
      - velocity

    gains:
      joint1:
        ff_velocity_scale: 1.0

    state_publish_rate: 50.0 # defaults to 50
    action_monitor_rate: 21.0 # defaults to 20

    allow_partial_joints_goal: false # defaults to false
    constraints:
      stopped_velocity_tolerance: 0.01 # Defaults to 0.01
      goal_time: 0.0 # defaults to 0.0 (start immediately)
      
    allow_nonzero_velocity_at_trajectory_end: false


# gazebo_ros_control:
#   ros__parameters:
#     start_parameters:
#       command_interface: "position"
    
#     stop_parameters:
#       command_interface: "position"
