<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:macro name="linear_slider_ros2_control" params="name prefix initial_state_file use_sim:=^|false use_mock_hardware:=^|false mock_sensor_commands:=^|false"> <!-- The caret ^ indicates to use the outer-scope property (with same name). The pipe | indicates to use the given fallback if the property is not defined in outer scope. -->
        <xacro:property name="initial_state" value="${xacro.load_yaml(initial_state_file)['initial_state']}"/>

        <ros2_control name="${name}" type="system">
            <!-- Hardware -->
            <hardware>
                <xacro:if value="${use_mock_hardware}">
                    <plugin>mock_components/GenericSystem</plugin>
                </xacro:if>
                <xacro:unless value="${use_mock_hardware}">
                    <plugin>gazebo_ros2_control/GazeboSystem</plugin>
                </xacro:unless>
            
                <param name="mock_sensor_commands">${mock_sensor_commands}</param>

                <!-- <plugin>linear_slider_system_interface/LinearSliderSystemInterface</plugin> -->
                <param name="device_name">linear_slider_ros2_control</param>
                <param name="joint_name">prismatic_joint</param>
                <param name="robot_ip">169.254.97.178</param>
                

            </hardware>

            <!-- Joints -->
            <joint name="${prefix}joint1">
                <!-- Command interface -->
                <command_interface name="velocity">
                    <param name="min">-0.1</param>
                    <param name="max">0.1</param>
                </command_interface>

                <!-- State interface -->
                <state_interface name="position">
                    <param name="initial_value">${initial_state['joint1_position']}</param>
                </state_interface>
                <state_interface name="velocity">
                    <param name="initial_value">${initial_state['joint1_velocity']}</param>
                </state_interface>
            </joint>
            
            <!-- Sensors -->
            <sensor name="lim_switch_neg">
                <state_interface name="switch_val">
                    <param name="initial_value">${initial_state['lim_switch_neg']}</param>
                </state_interface>
            </sensor>
            <sensor name="lim_switch_pos">
                <state_interface name="switch_val">
                    <param name="initial_value">${initial_state['lim_switch_pos']}</param>
                </state_interface>
            </sensor>
        </ros2_control>

        <!-- Gazebo -->

        <xacro:unless value="${use_mock_hardware}">
            <gazebo>
                <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
                    <!-- <robotNamespace>/linear_slider</robotNamespace> -->
                    <robot_param>robot_description</robot_param>
                    <robot_param_node>robot_state_publisher</robot_param_node>
                    <parameters>$(find linear_slider_bringup)/config/linear_slider_velocity_controller.yaml</parameters>
                </plugin>
                <sensor name="lim_switch_neg">
                    <always_on>1</always_on>
                </sensor>
                <sensor name="lim_switch_pos">
                    <always_on>1</always_on>
                </sensor>
            </gazebo>

            <gazebo reference="${prefix}base_link">
                <material>Gazebo/Gray</material>
            </gazebo>
            <gazebo reference="${prefix}joint1"/>
            <gazebo reference="${prefix}moving_base">
                <material>Gazebo/Red</material>
            </gazebo>
        </xacro:unless>
        


    </xacro:macro>
</robot>
